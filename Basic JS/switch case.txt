function caseInSwitch(val) {
  var answer = "";
  // Only change code below this line

    switch(val) {
      case 1:
       answer="alpha";
       return answer;
       break;
     case 2:
       answer="beta";
       return answer;
       break;
     case 3:
        answer="gamma";
         return answer;
       break;
      case 4:
       answer="delta";
       return answer;
       break;
};

  // Only change code above this line
  return answer;
};

caseInSwitch(1);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%DEFAULT OPTION IN SWITCH CASE


switch (num) {
  case value1:
    statement1;
    break;
  case value2:
    statement2;
    break;
...
  default:
    defaultStatement;
    break;
}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
Basic JavaScript: Multiple Identical Options in Switch Statements
If the break statement is omitted from a switch statement's case, the following case statement(s) are executed until a break is encountered. If you have multiple inputs with the same output, you can represent them in a switch statement like this:

switch(val) {
  case 1:
  case 2:
  case 3:
    result = "1, 2, or 3";
    break;
  case 4:
    result = "4 alone";
}
Cases for 1, 2, and 3 will all produce the same result.

Write a switch statement to set answer for the following ranges:
1-3 - "Low"
4-6 - "Mid"
7-9 - "High"

Note
You will need to have a case statement for each number in the range.