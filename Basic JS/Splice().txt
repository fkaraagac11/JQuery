Basic Data Structures: Remove Items Using splice()
Ok, so we've learned how to remove elements from the beginning and end of arrays using shift() and pop(), 
but what if we want to remove an element from somewhere in the middle? Or remove more than one element at once? 
Well, that's where splice() comes in. splice() allows us to do just that: remove any number of consecutive elements
 from anywhere in an array.

splice() can take up to 3 parameters, but for now, we'll focus on just the first 2. The first two parameters of 
splice() are integers which represent indexes, or positions, of the array that splice() is being called upon.
 And remember, arrays are zero-indexed, so to indicate the first element of an array, we would use 0. splice()'s 
first parameter represents the index on the array from which to begin removing elements, while the second parameter 
indicates the number of elements to delete. For example:

let array = ['today', 'was', 'not', 'so', 'great'];

array.splice(2, 2);
// remove 2 elements beginning with the 3rd element
// array now equals ['today', 'was', 'great']
splice() not only modifies the array it's being called on, but it also returns a new array containing the value of the 
removed elements:

let array = ['I', 'am', 'feeling', 'really', 'happy'];

let newArray = array.splice(3, 2);
// newArray equals ['really', 'happy']



We've initialized an array arr. Use splice() to remove elements from arr, so that it only 
contains elements that sum to the value of 10.

const arr = [2, 4, 5, 1, 7, 5, 2, 1];
// Only change code below this line
arr.splice(1, 4)
// Only change code above this line
console.log(arr);


Basic Data Structures: Add Items Using splice()
Remember in the last challenge we mentioned that splice() can take up to three parameters? 
Well, you can use the third parameter, comprised of one or more element(s), to add to the array.
 This can be incredibly useful for quickly switching out an element, or a set of elements, for another.

const numbers = [10, 11, 12, 12, 15];
const startIndex = 3;
const amountToDelete = 1;

numbers.splice(startIndex, amountToDelete, 13, 14);
// the second entry of 12 is removed, and we add 13 and 14 at the same index
console.log(numbers);
// returns [ 10, 11, 12, 13, 14, 15 ]


We have defined a function, htmlColorNames, which takes an array of HTML colors as an argument. 
Modify the function using splice() to remove the first two elements
 of the array and add 'DarkSalmon' and 'BlanchedAlmond' in their respective places.

function htmlColorNames(arr) {
  // Only change code below this line
arr.splice(0, 2,  'DarkSalmon', 'BlanchedAlmond')
  // Only change code above this line
  return arr;
}

console.log(htmlColorNames(['DarkGoldenRod', 'WhiteSmoke', 'LavenderBlush', 'PaleTurquoise', 'FireBrick']));